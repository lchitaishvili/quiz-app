{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction FillComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"input\", 2);\n    i0.ɵɵlistener(\"keyup\", function FillComponent_ng_container_1_Template_input_keyup_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onDigitInput($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"input\", i_r2, \"\");\n  }\n}\n\nconst _c0 = function () {\n  return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n};\n\nexport let FillComponent = /*#__PURE__*/(() => {\n  class FillComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n    onDigitInput(event) {\n      let element;\n      if (event.code !== 'Backspace') element = event.srcElement.nextElementSibling;\n      if (event.code === 'Backspace') element = event.srcElement.previousElementSibling;\n      if (element == null) return;else element.focus();\n    }\n\n  }\n\n  FillComponent.ɵfac = function FillComponent_Factory(t) {\n    return new (t || FillComponent)();\n  };\n\n  FillComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FillComponent,\n    selectors: [[\"app-fill\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[1, \"wrapper\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"maxlength\", \"1\", 3, \"id\", \"keyup\"]],\n    template: function FillComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, FillComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(1, _c0));\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\".wrapper[_ngcontent-%COMP%]{display:flex;gap:7.5px;flex-wrap:wrap}.wrapper[_ngcontent-%COMP%] > input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;background-color:var(--primary-bg);border:1px solid rgba(32,33,36,.1215686275);text-align:center;font-size:18px;font-weight:700}\"]\n  });\n  return FillComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}